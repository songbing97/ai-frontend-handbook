import{_ as a,o as s,c as o,N as l}from"./chunks/framework.c893c7c5.js";const F=JSON.parse('{"title":"正则表达式","description":"","frontmatter":{},"headers":[],"relativePath":"zh/learn/javascript/advanced/regexp.md"}'),t={name:"zh/learn/javascript/advanced/regexp.md"},e=l('<h1 id="正则表达式" tabindex="-1">正则表达式 <a class="header-anchor" href="#正则表达式" aria-label="Permalink to &quot;正则表达式&quot;">​</a></h1><h2 id="javascript的正则表达式包含哪些内容" tabindex="-1">JavaScript的正则表达式包含哪些内容？ <a class="header-anchor" href="#javascript的正则表达式包含哪些内容" aria-label="Permalink to &quot;JavaScript的正则表达式包含哪些内容？&quot;">​</a></h2><p>JavaScript中的正则表达式（Regular Expression，简称RegExp）是一种强大的模式匹配工具，用于对字符串进行模式匹配和处理。以下是正则表达式中常用的内容：</p><ol><li>字面量形式（Literal Form）：正则表达式可以使用字面量形式表示，用斜杠（<code>/</code>）包围起来。</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pattern </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ol start="2"><li>字符类（Character Classes）：用方括号（<code>[]</code>）表示，用于匹配特定范围内的字符。</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pattern </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">]/</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 匹配a、b或c中的任意一个字符</span></span></code></pre></div><ol start="3"><li>元字符（Metacharacters）：具有特殊含义的字符，如点号（<code>.</code>）匹配除换行符外的任意字符，反斜杠（<code>\\</code>）用于转义特殊字符等。</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pattern </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">a.c</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 匹配&quot;a&quot;、任意字符和&quot;c&quot;组成的字符串，如&quot;abc&quot;、&quot;axc&quot;等</span></span></code></pre></div><ol start="4"><li>量词（Quantifiers）：用于指定匹配次数的数量，如星号（<code>*</code>）表示零次或多次，加号（<code>+</code>）表示一次或多次，问号（<code>?</code>）表示零次或一次等。</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pattern </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">ab</span><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 匹配&quot;a&quot;、一个或多个&quot;b&quot;和&quot;c&quot;组成的字符串，如&quot;abc&quot;、&quot;abbc&quot;等</span></span></code></pre></div><ol start="5"><li>边界（Anchors）：用于匹配字符串的边界位置，如插入符号（<code>^</code>）表示字符串的开始位置，美元符号（<code>$</code>）表示字符串的结束位置。</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pattern </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 匹配以&quot;abc&quot;开头的字符串</span></span></code></pre></div><ol start="6"><li>分组和捕获（Grouping and Capturing）：用小括号（<code>()</code>）进行分组，并且可以通过捕获（Capture）将匹配的部分提取出来。</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pattern </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/(</span><span style="color:#C3E88D;">ab</span><span style="color:#89DDFF;">)+/</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 匹配多个&quot;ab&quot;连续出现的字符串，如&quot;abab&quot;、&quot;ababab&quot;等</span></span></code></pre></div><ol start="7"><li>反向引用（Backreferences）：使用反斜杠和数字（<code>\\1</code>、<code>\\2</code>等）来引用之前已经捕获的分组。</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pattern </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/(</span><span style="color:#C3E88D;">\\w</span><span style="color:#89DDFF;">)</span><span style="color:#F78C6C;">\\1</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 匹配连续出现的相同字母或数字，如&quot;aa&quot;、&quot;11&quot;等</span></span></code></pre></div><ol start="8"><li>标志（Flags）：用于修饰正则表达式的行为，如全局匹配（<code>g</code>）、不区分大小写（<code>i</code>）、多行匹配（<code>m</code>）等。</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pattern </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">gi</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 全局、不区分大小写地匹配&quot;abc&quot;</span></span></code></pre></div><p>正则表达式还有更多的特性和语法，用于匹配和处理更</p><p>复杂的字符串模式。通过正则表达式，可以进行字符串的匹配、替换、提取等操作，非常有用且强大。在JavaScript中，可以使用RegExp对象或正则表达式字面量来创建和操作正则表达式。</p>',21),n=[e];function p(c,r,i,y,D,d){return s(),o("div",null,n)}const u=a(t,[["render",p]]);export{F as __pageData,u as default};
