import{_ as s,o as l,c as a,N as o}from"./chunks/framework.c893c7c5.js";const g=JSON.parse('{"title":"基础内容","description":"","frontmatter":{},"headers":[],"relativePath":"zh/learn/html/basic_theory.md"}'),t={name:"zh/learn/html/basic_theory.md"},p=o(`<h1 id="基础内容" tabindex="-1">基础内容 <a class="header-anchor" href="#基础内容" aria-label="Permalink to &quot;基础内容&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">建议</p><ul><li>理论部分，以感性地理解概念为主，切勿急于深入。</li></ul></div><h2 id="什么是html标签" tabindex="-1">什么是HTML标签？ <a class="header-anchor" href="#什么是html标签" aria-label="Permalink to &quot;什么是HTML标签？&quot;">​</a></h2><p>HTML标签（Hypertext Markup Language tags）是用于定义网页结构和呈现方式的元素。HTML标签由尖括号包围，并以开始标签和结束标签的形式出现。开始标签包含了标签的名称，而结束标签在标签名称前加上斜杠（/）。</p><p>HTML标签被用于描述网页中的不同部分，如标题、段落、链接、图像等。通过使用不同的HTML标签，可以将内容划分为逻辑块，并为其指定特定的样式和功能。</p><p>以下是一些常见的HTML标签示例：</p><ul><li><code>&lt;html&gt;</code>：定义HTML文档的根元素。</li><li><code>&lt;head&gt;</code>：定义文档的头部部分，通常包含了文档的标题和其他元数据。</li><li><code>&lt;body&gt;</code>：定义文档的主体部分，包含了网页的实际内容。</li><li><code>&lt;h1&gt; - &lt;h6&gt;</code>：定义标题，其中<code>&lt;h1&gt;</code>为最高级标题，<code>&lt;h6&gt;</code>为最低级标题。</li><li><code>&lt;p&gt;</code>：定义段落。</li><li><code>&lt;a&gt;</code>：定义链接，可以用于创建文本链接或图像链接。</li><li><code>&lt;img&gt;</code>：定义图像，用于在网页中插入图像。</li><li><code>&lt;div&gt;</code>：定义文档中的一个区块或容器，可用于组织和样式化内容。</li><li><code>&lt;ul&gt;</code>：定义无序列表。</li><li><code>&lt;li&gt;</code>：定义列表项。</li></ul><p>这只是一小部分HTML标签的例子，HTML还有很多其他标签可用于实现更多的功能和样式。使用这些标签，可以创建出结构良好、具有丰富内容和交互性的网页。</p><h2 id="标签有哪些常见的属性" tabindex="-1">标签有哪些常见的属性？ <a class="header-anchor" href="#标签有哪些常见的属性" aria-label="Permalink to &quot;标签有哪些常见的属性？&quot;">​</a></h2><p>HTML标签有很多常见的属性，这些属性可以提供有关元素的额外信息或控制其行为和外观。以下是一些常见的HTML标签属性示例：</p><ol><li><strong>class</strong>：用于定义一个元素的类名，多个类名可以通过空格分隔。</li><li><strong>id</strong>：用于为元素指定唯一的标识符。</li><li><strong>style</strong>：用于为元素指定行内样式，包括CSS属性和值。</li><li><strong>src</strong>：用于指定图像、音频、视频等媒体元素的源文件路径。</li><li><strong>href</strong>：用于指定链接的目标URL，通常在&lt;a&gt;标签中使用。</li><li><strong>alt</strong>：用于提供图像的替代文本，当图像无法显示时将显示该文本。</li><li><strong>width</strong>：用于指定元素的宽度。</li><li><strong>height</strong>：用于指定元素的高度。</li><li><strong>placeholder</strong>：用于在输入字段中提供提示文本。</li><li><strong>disabled</strong>：用于禁用一个元素，使其不可交互或不可编辑。</li><li><strong>required</strong>：用于指定输入字段必填。</li><li><strong>checked</strong>：用于选中复选框或单选按钮。</li><li><strong>readonly</strong>：用于指定输入字段只读，不可编辑。</li><li><strong>maxlength</strong>：用于限制输入字段的最大长度。</li><li><strong>target</strong>：用于指定链接的打开方式，常见的值包括_blank、_self、_parent和_top等。</li></ol><p>这只是一小部分常见的HTML标签属性，不同的标签可能具有不同的属性。可以根据需要查阅特定标签的文档和参考资料，了解更多的属性和其使用方法。</p><h2 id="如何使用html标签和属性" tabindex="-1">如何使用HTML标签和属性？ <a class="header-anchor" href="#如何使用html标签和属性" aria-label="Permalink to &quot;如何使用HTML标签和属性？&quot;">​</a></h2><p>使用HTML标签和属性可以创建和定义网页的结构、内容和样式。下面是一些基本的指导步骤：</p><ol><li><p>使用开始标签和结束标签来包围内容：大多数HTML标签都需要使用开始标签和结束标签来包围要定义的内容。开始标签用于指定标签的类型和属性，结束标签用于表示标签的结束。</p><p>例如，要创建一个段落，可以使用<code>&lt;p&gt;</code>标签来定义起始标签，然后使用<code>&lt;/p&gt;</code>标签来定义结束标签：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">This is a paragraph.</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li><li><p>使用属性来提供额外的信息：HTML标签可以使用属性来提供额外的信息或修改标签的行为和样式。属性位于开始标签的内部，并具有名称和值的形式。属性名称和值之间使用等号进行赋值。</p><p>例如，要为一个图像指定源文件和替代文本，可以使用<code>src</code>属性和<code>alt</code>属性：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">image.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">alt</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Image description</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li><li><p>标签的嵌套：HTML标签可以嵌套在其他标签内部，以创建更复杂的结构和层次关系。</p><p>例如，可以在段落内部嵌套一个链接：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">This is a </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://example.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">link</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> within a paragraph.</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li><li><p>使用样式和布局：通过使用CSS（层叠样式表），可以为HTML标签添加样式和布局。CSS允许您定义字体、颜色、大小、边距、对齐等属性，以改变元素的外观。</p><p>例如，可以通过内联样式或通过CSS样式表来设置段落的颜色和字体大小：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">color: blue; font-size: 18px;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">This is a styled paragraph.</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li></ol><p>这只是HTML标签和属性的基本使用方法。HTML具有广泛的标签和属性，您可以根据需要深入学习和使用它们，以实现更复杂和丰富的网页设计。</p><h2 id="什么是html元素" tabindex="-1">什么是HTML元素？ <a class="header-anchor" href="#什么是html元素" aria-label="Permalink to &quot;什么是HTML元素？&quot;">​</a></h2><p>HTML元素是构成HTML文档的基本构建块。一个HTML元素由开始标签、结束标签和它们之间的内容组成。开始标签和结束标签通常由尖括号包围，开始标签包含元素的名称，结束标签在名称前加上斜杠（/）。</p><p>HTML元素的结构如下所示：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">element</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">content</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">element</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>其中：</p><ul><li><code>&lt;element&gt;</code>：开始标签，用于定义元素的类型和属性。</li><li><code>content</code>：元素的内容，可以是文本、其他HTML元素或空。</li></ul><p>开始标签和结束标签将包围元素的内容，指示了元素在文档中的起始和结束位置。</p><p>以下是一个例子，展示了一个简单的段落元素：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">This is a paragraph.</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>在这个例子中，<code>&lt;p&gt;</code>是段落的开始标签，<code>&lt;/p&gt;</code>是段落的结束标签，而<code>This is a paragraph.</code>则是段落的内容。</p><p>HTML元素用于定义和描述文档的各个部分，如标题、段落、链接、图像等。通过使用不同的HTML元素，可以将内容划分为逻辑块，并为其指定特定的样式和功能。</p><h2 id="元素和标签有什么不同" tabindex="-1">元素和标签有什么不同？ <a class="header-anchor" href="#元素和标签有什么不同" aria-label="Permalink to &quot;元素和标签有什么不同？&quot;">​</a></h2><p>在HTML中，术语&quot;元素&quot;和&quot;标签&quot;具有不同的含义：</p><ol><li><p>元素（Element）：元素是HTML文档的构建块，由开始标签、结束标签和它们之间的内容组成。一个完整的HTML元素包括开始标签、内容和结束标签，它们一起定义了元素在文档中的位置和特征。</p><p>例如，下面是一个包含元素名称、开始标签、内容和结束标签的段落元素：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">This is a paragraph.</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>在这个例子中，<code>&lt;p&gt;</code>是元素的开始标签，<code>This is a paragraph.</code>是元素的内容，<code>&lt;/p&gt;</code>是元素的结束标签。</p></li><li><p>标签（Tag）：标签是用于定义HTML元素的表示。标签由尖括号包围，放置在元素的开始和结束位置。开始标签包含了元素的名称和可能的属性，结束标签与开始标签的名称相同，只是在名称前加上斜杠（/）。</p><p>例如，在上述段落元素中，<code>&lt;p&gt;</code>是段落的开始标签，<code>&lt;/p&gt;</code>是段落的结束标签。这些标签定义了段落元素的类型和边界。</p><p>注意，有些HTML元素是自闭合的，也就是说它们没有内容和结束标签，而只有一个开始标签。这样的元素被称为自闭合元素，其标签在末尾带有斜杠。</p><p>例如，<code>&lt;img&gt;</code>元素用于插入图像，它是一个自闭合元素，没有结束标签。下面是一个带有<code>&lt;img&gt;</code>标签的例子：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">image.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">alt</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Image description</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li></ol><p>总结来说，元素是构成HTML文档的基本单位，由开始标签、内容和结束标签组成；而标签是用于定义元素的表示，包括开始标签、可能的属性和结束标签（对于非自闭合元素）。</p><h2 id="什么是html属性" tabindex="-1">什么是HTML属性？ <a class="header-anchor" href="#什么是html属性" aria-label="Permalink to &quot;什么是HTML属性？&quot;">​</a></h2><p>HTML属性（Attribute）是用于提供额外信息、配置或修改HTML元素行为和样式的特性。属性可以在HTML标签的开始标签中使用，并以名称和值的形式出现，以提供有关元素的额外信息。</p><p>HTML属性的一般语法如下：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">tagname</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">attribute_name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">attribute_value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">content</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">tagname</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>其中：</p><ul><li><code>&lt;tagname&gt;</code>：HTML标签的名称。</li><li><code>attribute_name</code>：属性的名称。</li><li><code>attribute_value</code>：属性的值。</li></ul><p>属性名和值之间使用等号进行赋值，并且属性值通常使用双引号或单引号括起来。属性值可以是文本、URL、颜色、尺寸等，具体取决于属性的类型和用途。</p><p>以下是一些常见的HTML属性示例：</p><ul><li><code>class</code>：指定元素的CSS类。</li><li><code>id</code>：指定元素的唯一标识符。</li><li><code>src</code>：指定图像、音频或视频等媒体文件的源文件路径。</li><li><code>href</code>：指定链接的目标URL。</li><li><code>alt</code>：指定图像的替代文本。</li><li><code>style</code>：指定元素的内联样式。</li></ul><p>例如，下面是一个带有多个属性的链接元素的示例：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://example.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">link</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">target</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">_blank</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Click here</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>在这个例子中，<code>href</code>属性指定了链接的目标URL，<code>class</code>属性指定了元素的CSS类，<code>target</code>属性指定了链接在新标签页中打开。</p><p>HTML属性提供了一种扩展HTML元素的能力，使其具有更多的行为和样式。通过使用不同的属性，可以根据需要定制和控制元素的外观和行为。</p><h2 id="什么是html的文本格式化" tabindex="-1">什么是HTML的文本格式化？ <a class="header-anchor" href="#什么是html的文本格式化" aria-label="Permalink to &quot;什么是HTML的文本格式化？&quot;">​</a></h2><p>在HTML中，文本格式化是指使用特定的标记和标签来改变文本的外观和呈现方式。HTML提供了多种标签和属性，用于实现文本的格式化和排版，从而增强内容的可读性和视觉效果。</p><p>以下是一些常见的HTML文本格式化的技术：</p><ol><li><p>标题（Heading）：使用<code>&lt;h1&gt;</code>到<code>&lt;h6&gt;</code>标签来定义不同级别的标题。这些标签按照大小和重要性的顺序排列，<code>&lt;h1&gt;</code>为最高级标题，<code>&lt;h6&gt;</code>为最低级标题。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">This is a heading level 1</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h2</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">This is a heading level 2</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h2</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li><li><p>段落（Paragraph）：使用<code>&lt;p&gt;</code>标签来定义段落。段落标签会为文本添加段落间距，并自动换行。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">This is a paragraph.</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li><li><p>粗体（Bold）：使用<code>&lt;b&gt;</code>或<code>&lt;strong&gt;</code>标签来将文本加粗显示。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">This is bold text.</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">strong</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">This is also bold text.</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">strong</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li><li><p>斜体（Italic）：使用<code>&lt;i&gt;</code>或<code>&lt;em&gt;</code>标签来将文本斜体显示。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">This is italic text.</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">em</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">This is also italic text.</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">em</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li><li><p>下划线（Underline）：使用<code>&lt;u&gt;</code>标签来为文本添加下划线。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">u</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">This is underlined text.</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">u</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li><li><p>删除线（Strikethrough）：使用<code>&lt;s&gt;</code>或<code>&lt;del&gt;</code>标签来为文本添加删除线。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">s</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">This is strikethrough text.</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">s</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">del</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">This is also strikethrough text.</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">del</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li><li><p>上标和下标（Superscript and Subscript）：使用<code>&lt;sup&gt;</code>标签将文本设置为上标，使用<code>&lt;sub&gt;</code>标签将文本设置为下标。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">H</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">sub</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">2</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">sub</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">O is the chemical formula for water.</span></span>
<span class="line"><span style="color:#A6ACCD;">X</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">sup</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">2</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">sup</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> + Y</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">sup</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">2</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">sup</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> = Z</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">sup</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">2</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">sup</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li></ol><p>这只是HTML中一些常见的文本格式化技术的示例。通过组合使用这些标签和属性，可以改变文本的外观，强调重要内容，并提高可读性和视觉效果。同时，还可以结合CSS样式表进一步定制和扩展文本的外观和格式化效果。</p>`,49),n=[p];function e(c,r,i,F,D,y){return l(),a("div",null,n)}const h=s(t,[["render",e]]);export{g as __pageData,h as default};
